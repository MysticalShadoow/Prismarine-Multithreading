import { Entity } from "prismarine-entity";
import { PredictiveFunction } from "./goalTypes";
import * as goals from "./goals";
import type { Bot } from "mineflayer";
import type { Vec3 } from "vec3";
export declare namespace GoalFactory {
    function followEntity(bot: Bot, target: Entity, wantedDistance?: number): goals.EntityGoalDynamic;
    function predictEntity(bot: Bot, target: Entity, wantedDistance?: number, ticksToPredict?: number, predictiveFunction?: PredictiveFunction): goals.EntityGoalPredictive;
    function gotoEntity(bot: Bot, target: Entity): goals.StaticGoal;
    function gotoPos(bot: Bot, target: Vec3): goals.StaticGoal;
    function inverseGoal(goal: goals.BaseGoal): goals.InverseGoal;
}
/**
 * usage:
 *
 * const nonPredictive = GoalFactory.followEntity(bot, entity, false)
 *
 * const predictive = GoalFactory.followEntity(bot, entity, true)
 *
 * const staticEntity = GoalFactory.gotoEntity(bot, entity)
 *
 * const staticPos = GoalFactory.gotoPos(bot, target)
 *
 */
