"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PlayerControls = exports.Physics = exports.PlayerState = exports.EntityState = exports.MovementSimulations = exports.ProjectileTracker = exports.EntityTracker = void 0;
const mineflayer_util_plugin_1 = __importDefault(require("@nxg-org/mineflayer-util-plugin"));
const entityTracker_1 = require("./entityTracker");
Object.defineProperty(exports, "EntityTracker", { enumerable: true, get: function () { return entityTracker_1.EntityTracker; } });
const projectileTracker_1 = require("./projectileTracker");
Object.defineProperty(exports, "ProjectileTracker", { enumerable: true, get: function () { return projectileTracker_1.ProjectileTracker; } });
const nextSim_1 = require("./dist/physics/sims/nextSim");
Object.defineProperty(exports, "MovementSimulations", { enumerable: true, get: function () { return nextSim_1.MovementSimulations; } });
const entityState_1 = require("./dist/physics/states/entityState");
Object.defineProperty(exports, "EntityState", { enumerable: true, get: function () { return entityState_1.EntityState; } });
const playerState_1 = require("./dist/physics/states/playerState");
Object.defineProperty(exports, "PlayerState", { enumerable: true, get: function () { return playerState_1.PlayerState; } });
const physics_1 = require("./dist/physics/engines/physics");
Object.defineProperty(exports, "Physics", { enumerable: true, get: function () { return physics_1.Physics; } });
const playerControls_1 = require("./dist/physics/player/playerControls");
Object.defineProperty(exports, "PlayerControls", { enumerable: true, get: function () { return playerControls_1.PlayerControls; } });
function plugin(bot) {
    if (!bot.util)
        bot.loadPlugin(mineflayer_util_plugin_1.default);
    bot.tracker = new entityTracker_1.EntityTracker(bot);
    bot.projectiles = new projectileTracker_1.ProjectileTracker(bot);
    // bot.inputReader = new MovementReader(bot);
}
exports.default = plugin;
// export { MovementReader };
