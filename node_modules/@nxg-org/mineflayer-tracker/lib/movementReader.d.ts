import { Physics } from "./dist/physics/engines/physics";
import { MovementSimulations } from "./dist/physics/sims/nextSim";
import { Bot } from "mineflayer";
import { Vec3 } from "vec3";
import { Entity } from "prismarine-entity";
import { EntityState } from "./dist/physics/states/entityState";
export declare type TrackingData = {
    [entityId: number]: {
        tracking: boolean;
        states: EntityState[];
    };
};
export declare class MovementReader {
    private bot;
    physics: Physics;
    readonly moveSims: MovementSimulations;
    trackingData: TrackingData;
    private simStates;
    private tick;
    constructor(bot: Bot);
    getCorrectMovement(entity: Entity): import("./dist/physics/player/playerControls").ControlStateHandler | null;
    private perVelocityUpdateState;
    private updateStateInfo;
    trackEntity(entity: Entity): void;
    stopTrackingEntity(entity: Entity, clear?: boolean): void;
    getTestState(entity: Entity): EntityState | null;
    getEntityVelocity(entity: Entity): Vec3 | null;
}
